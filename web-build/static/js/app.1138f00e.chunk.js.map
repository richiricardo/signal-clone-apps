{"version":3,"sources":["firebase.js","screens/LoginScreen.js","components/CustomListItem.js","screens/HomeScreen.js","screens/RegisterScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","length","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","photoURL","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","displayName","message","HomeScreen","chats","setChats","signOutUser","signOut","then","useLayoutEffect","setOptions","headerStyle","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","name","size","SimpleLineIcons","SafeAreaView","ScrollView","RegisterScreen","setName","imageUrl","setImageUrl","headerBackTitle","register","createUserWithEmailAndPassword","user","updateProfile","h3","marginBottom","autofocus","raised","AddChatScreen","input","setInput","createChat","a","async","add","goBack","leftIcon","Button","disabled","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","headerTitle","Text","params","FontAwesome","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","reciever","position","bottom","right","recieverText","sender","senderText","senderName","footer","TextInput","textInput","alignSelf","borderRadius","maxWidth","margin","left","paddingRight","fontSize","Stack","createStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.1138f00e.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAVUJdOvbwvjRHDNvKgx3Uvsxe8fUOtPCQ\",\n    authDomain: \"interact-e54d0.firebaseapp.com\",\n    projectId: \"interact-e54d0\",\n    storageBucket: \"interact-e54d0.appspot.com\",\n    messagingSenderId: \"306882113680\",\n    appId: \"1:306882113680:web:f1eeeba23db9dc41802815\"\n  };\n\n\n  let app;\n\n  if (firebase.apps.length === 0) {\n      app = firebase.initializeApp(firebaseConfig);\n  } else {\n      app = firebase.app();\n  }\n\n  const db = app.firestore();\n  const auth = firebase.auth();\n\n  export { db, auth };","import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Button, Input, Image, withTheme } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { auth } from \"../firebase\";\n\n\nconst LoginScreen = ({ navigation }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if(authUser) {\n            navigation.replace(\"Home\");\n\n        }\n    });\n\n    return unsubscribe;\n    }, []);\n\n    const signIn = () => {\n        auth\n        .signInWithEmailAndPassword(email, password)\n        .catch(error => alert(error));\n    };\n\n    return (\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n            <StatusBar style =\"light\" />\n            <Image source = {{\n                uri: \n                \"https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png\",\n            }}\n            style={{ width: 200, height: 200 }}\n            />\n\n            <View style = {styles.inputContainer}>\n            <Input placeholder = \"Email\" autoFocus type =\"Email\" value={email} onChangeText={text => setEmail(text)}\n            />\n            <Input placeholder = \"password\" secureTextEntry type =\"password\" value={password} onChangeText={text => setPassword(text)} onSubmitEditing={signIn}\n            /> \n            </View>\n            <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\n            <Button onPress={() => navigation.navigate('Register')} containerStyle={styles.button} type=\"outline\" title=\"Register\" />\n            <View style={{height: 100 }} />\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 10,\n        backgroundColor: '#fff',\n    },\n    inputContainer: {\n        width: 300,\n    },\n    button: {\n        width: 200,\n        marginTop: 10,\n    },\n    \n});\n","import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native';\nimport { ListItem, Avatar } from \"react-native-elements\"\nimport { db } from \"../firebase\";\n\nconst CustomListItem = ({ id, chatName, enterChat }) => {\n    const [chatMessages, setChatMessages] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = db\n        .collection('chats')\n        .doc(id)\n        .collection('messages')\n        .orderBy('timestamp', 'desc').onSnapshot(snapshot => \n        setChatMessages(snapshot.docs.map(doc => doc.data()))\n\n        );\n\n        return unsubscribe;\n\n    })\n\n    \n    return (\n        <ListItem key={id} onPress={() => enterChat(id, chatName)} key={id} bottomDivider>\n        <Avatar \n            rounded\n            source={{\n                uri: \n                chatMessages?.[0]?.photoURL || \n                \"https://www.vhv.rs/dpng/d/421-4213265_transparent-no-avatar-png-avatar-user-login-icon.png\",\n            }}\n            />\n            <ListItem.Content>\n            <ListItem.Title style={{ fontWeight: \"800\"}}>\n            {chatName}\n            </ListItem.Title>\n            <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\n                \n            {chatMessages?.[0]?.displayName}: {chatMessages?.[0]?.message}\n            </ListItem.Subtitle>\n            </ListItem.Content>\n        </ListItem>\n    );\n};\n\nexport default CustomListItem\n\nconst styles = StyleSheet.create({})\n","import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport { SafeAreaView, View, ScrollView } from 'react-native';\nimport CustomListItem from '../components/CustomListItem';\nimport { Avatar } from \"react-native-elements\";\nimport { auth, db } from \"../firebase\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\n\nconst HomeScreen = ({navigation}) => {\n\n    const [chats, setChats] = useState([]);\n\n    const signOutUser = () => {\n        auth.signOut().then(() => {\n        navigation.replace(\"Login\");\n        });\n    };\n\n    useEffect(() => {\n        const unsubscribe = db.collection('chats').onSnapshot((snapshot) => \n            setChats(\n                snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        )\n        )\n\n        return unsubscribe;\n    }, []);\n\n\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Interact\",\n            headerStyle: { backgroundColor: \"#fff\" },\n            headerTitleStyle: { color: \"black\" },\n            headerTintColor: \"black\",\n            headerLeft: () => (\n                <View style={{ marginLeft: 20 }}> \n                <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\n            <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }} />\n            </TouchableOpacity>\n            </View>\n            ),\n            headerRight: () => (\n                <View \n                    style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        width: 80,\n                        marginRight: 20,\n                    }}\n                >\n                <TouchableOpacity activeOpacity={0.5}>\n                <AntDesign name = 'camerao' size={24} color=\"black\" />\n                </TouchableOpacity>\n\n\n                <TouchableOpacity \n                onPress={() => navigation.navigate(\"AddChat\")}\n                activeOpacity={0.5}\n                > \n                <SimpleLineIcons name = \"pencil\" size={24} color=\"black\" />\n                </TouchableOpacity>\n                </View>\n            ),\n        });\n\n    }, [navigation]);\n\n    const enterChat = (id, chatName) => {\n        navigation.navigate('Chat', {\n            id,\n            chatName,\n        })\n    }\n\n    return (\n        <SafeAreaView>\n            <ScrollView style={styles.container}>\n            {chats.map(({ id, data: { chatName } }) => (\n                <CustomListItem key={id} id={id} chatName={chatName}\n                enterChat={enterChat}\n                />\n\n            ))}\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        height: \"100%\",\n    },\n})\n","import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, Input, normalize, Text } from \"react-native-elements\";\nimport { auth } from \"../firebase\";\n\n\nconst RegisterScreen = ({ navigation }) => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n  \n    // How to change the back title \n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: \"Login\",\n        })\n    }, [navigation])\n\n    const register = () => {\n        auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((authUser) => {\n            authUser.user.updateProfile({\n                displayName: name,\n                photoURL: imageUrl || \"https://www.vhv.rs/dpng/d/421-4213265_transparent-no-avatar-png-avatar-user-login-icon.png\",\n            });\n        })\n        .catch((error) => alert(error.message));\n    };\n    return (\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <StatusBar style =\"light\" />\n\n        <Text h3 style={{ marginBottom: 50 }}>\n        Create a Signal account\n        </Text>\n\n        <View style={styles.inputContainer}>\n        <Input placeholder=\"Full Name\" autofocus type = \"text\" value={name} onChangeText={(text) => setName(text)} />\n        <Input placeholder=\"Email\" type = \"email\" value={email} onChangeText={(text) => setEmail(text)} />\n        <Input placeholder=\"Password\" type = \"password\" secureTextEntry value={password} onChangeText={(text) => setPassword(text)} />\n        <Input placeholder=\"Profile Picture URL (optional)\"  type = \"text\" value={imageUrl} onChangeText={(text) => setImageUrl(text)} onSubmitEditing={register}/>\n        </View>\n\n        <Button \n        containerStyle={styles.button}\n        raised onPress={register} title=\"Register\" />\n        <View style={{ height: 100 }} />\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 10,\n        backgroundColor: \"white\",\n    },\n    button: {\n        width: 200,\n        marginTop: 10,\n\n    },\n    inputContainer: {\n        width: 300,\n    },\n})\n","import React, { useLayoutEffect, useState } from 'react';\nimport { Button } from 'react-native';\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Icon, Input } from 'react-native-elements';\nimport { db } from '../firebase';\n\nconst AddChatScreen = ({ navigation }) => {\n    const [input, setInput] = useState(\"\");\n\n    useLayoutEffect(() => {\n         navigation.setOptions({\n             title: 'Add a new Chat',\n             headerBackTitle: \"Chats\",\n         });\n        \n    }, [navigation]);\n\n    const createChat = async () => {\n        await db\n        \n        .collection('chats')\n        .add({\n            chatName: input,\n        })\n        .then(() => {\n            navigation.goBack();\n        }).catch((error) => alert(error));\n    }\n\n    return (\n        <View style={styles.container}>\n        <Input \n        placeholder=\"Enter a chat name\" \n        value={input} \n        onChangeText={(text) => setInput(text)}\n        onSubmitEditing={createChat}\n        leftIcon={\n            <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\" />\n        }\n        />\n        <Button disabled={!input} onPress={createChat} title=\"Create new Chat\" />\n        </View>\n    )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"white\",\n        padding: 30,\n        height: \"100%\",\n    }\n\n})\n","import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Avatar } from 'react-native-elements';\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaView } from 'react-native';\nimport {  ScrollView } from 'react-native';\nimport {  TextInput } from 'react-native';\nimport { Platform } from 'react-native';\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { Keyboard } from 'react-native';\nimport { TouchableWithoutFeedback, TouchableOpacity } from \"react-native\";\nimport * as firebase from \"firebase\";\nimport { db, auth } from \"../firebase\";\n\n\n\nconst ChatScreen = ({ navigation, route}) => {\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n        title: \"Chat\",\n        headerBackTitleVisible: false,\n        headerTitleAlign: \"left\",\n        headerTitle: () => (\n            <View\n            style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n            }}\n            >\n            <Avatar rounded source={{\n                uri: messages[0]?.data.photoURL, \n            }}\n            />\n            <Text style={{ color: \"white\", marginLeft: 10, fontWeight: \"700\" }}>\n            {route.params.chatName}\n            </Text>\n            </View>\n        ),\n        headerLeft: () => (\n            <TouchableOpacity style={{ marginLeft: 10 }} onPress={navigation.goBack}\n            >  \n            <AntDesign name=\"arrowleft\" size={24} color=\"white\" />\n            </TouchableOpacity>\n        ),\n        headerRight: () => (\n            <View \n            style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: 80,\n                marginRight: 20,\n            }}\n            >\n            <TouchableOpacity>\n            <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\n            </TouchableOpacity>\n            <TouchableOpacity>\n            <Ionicons name =\"call\" size={24} color=\"white\" />\n            </TouchableOpacity>\n            </View>\n        )\n        });\n    }, [navigation, messages]);\n\n    const sendMessage = () => {\n        Keyboard.dismiss();\n\n        db.collection('chats').doc(route.params.id).collection('messages').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            message: input,\n            displayName: auth.currentUser.displayName, \n            email: auth.currentUser.email,\n            photoURL: auth.currentUser.photoURL,\n\n        })\n\n        setInput('')\n    };\n\n    useLayoutEffect(() => {\n        const unsubscribe = db\n        .collection('chats')\n        .doc(route.params.id)\n        .collection('messages')\n        .orderBy('timestamp', 'desc')\n        .onSnapshot(snapshot => setMessages(\n            snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            }))\n        ))\n        return unsubscribe;\n    }, [route])\n\n    return (\n        <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\n        <StatusBar style=\"light\" />\n            <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            style={styles.container}\n            keyboardVerticalOffset={90}\n            >\n                <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                 <>\n                <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\n                {messages.map(({ id, data }) => \n                    data.email === auth.currentUser.email ? (\n                        <View key={id} style={styles.reciever}>\n                            <Avatar\n                            position=\"absolute\"\n                            rounded\n                            // WEB\n                            containerStyle={{\n                                position: \"absolute\",\n                                bottom: -15,\n                                right: -5,\n                            }}\n                            bottom={-15}\n                            right={-5}\n                            size={30}\n                            source={{\n                                uri: data.photoURL,\n                            }}\n                            />\n                            <Text style={styles.recieverText}>{data.message}</Text>\n                        </View>\n\n                    ): (\n\n                        <View key={id} style={styles.sender}>\n                        <Avatar \n                        position=\"absolute\"\n                        rounded\n                        // WEB\n                        containerStyle={{\n                            position: \"absolute\",\n                            bottom: -15,\n                            right: -5,\n                        }}\n                        bottom={-15}\n                        right={-5}\n                        size={30}\n                        source={{\n                            uri: data.photoURL,\n                        }}\n                        \n                        \n                     />\n                        <Text style={styles.senderText}>{data.message}</Text>\n                        <Text style={styles.senderName}>{data.displayName}</Text>\n                        </View>\n\n                    )\n                )}\n                </ScrollView>\n                <View style={styles.footer}>\n                <TextInput \n                value={input} \n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={sendMessage}\n                placeholder=\"Interact Message\" \n                style={styles.textInput}\n                />\n                <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\n                <Ionicons name = \"send\" size={24} color=\"#2c6bedfir\" />\n                </TouchableOpacity>\n                </View>\n                \n                </>\n                  </TouchableWithoutFeedback>\n                </KeyboardAvoidingView>\n        </SafeAreaView>    \n    )\n}\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n\n    reciever: {\n        padding: 15,\n        backgroundColor: \"#ECECEC\",\n        alignSelf: \"flex-end\",\n        borderRadius: 20,\n        marginRight: 15,\n        marginBottom: 20,\n        maxWidth: \"80%\",\n        position: \"relative\",\n    },\n\n    sender: {\n        padding: 15,\n        backgroundColor: \"#2b68e6\",\n        alignSelf: \"flex-start\",\n        borderRadius: 20,\n        margin: 15,\n        maxWidth: \"80%\",\n        position: \"relative\",\n    },\n\n    senderText: {\n        color: \"white\",\n        fontWeight: \"500\",\n        marginLeft: 10,\n        marginBottom: 15,\n    },\n\n    senderName: {\n        left: 10, \n        paddingRight: 10,\n        fontSize: 10,\n        color: \"white\",\n    },\n\n    footer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        width: \"100%\",\n        padding: 15,\n    },\n\n    textInput: {\n        bottom: 0,\n        height: 40,\n        flex: 1,\n        marginRight: 15,\n        backgroundColor: \"#ececec\",\n        padding: 10,\n        color: 'grey',\n        borderRadius: 30,\n    },\n})\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\n\n\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\nconst globalScreenOptions = {  \n  headerStyle: { backgroundColor: \"#2c6bed\" },\n  headerTitleStyle: { color: \"white\" }, //This is for the title of the page\n  headerTintColor: \"white\", //Icons inside the header will be white (tint)\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n    <Stack.Navigator //initialRouteName=\"Home\" \n      screenOptions={globalScreenOptions}>\n     <Stack.Screen name ='Login' component={LoginScreen} />\n     <Stack.Screen name ='Register' component={RegisterScreen} />\n     <Stack.Screen name ='Home' component={HomeScreen} />\n     <Stack.Screen name ='AddChat' component={AddChatScreen} />\n     <Stack.Screen name ='Chat' component={ChatScreen} />\n\n\n\n\n    </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n//2:40:40"],"sourceRoot":""}